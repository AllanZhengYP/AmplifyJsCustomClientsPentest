import { Authenticator, Button, Card, Text, useAuthenticator } from "@aws-amplify/ui-react";
import type { AmplifyUser } from "@aws-amplify/ui";
import "@aws-amplify/ui-react/styles.css";
import { Credentials } from "@aws-amplify/core";
import { Amplify } from "aws-amplify";
// @ts-ignore
import awsConfig from "backend";
import { useEffect, useState } from "react";
import "./App.css";

Amplify.configure(awsConfig);

function App() {
  const { user, signOut } = useAuthenticator();
  const [identityId, setIdentityId] = useState("");
  const [accessKeyId, setAccessKeyId] = useState("");

  useEffect(() => {
    const loadIds = async () => {
      if (user) {
        const { accessKeyId, identityId } = await Credentials.get();
        setIdentityId(identityId);
        setAccessKeyId(accessKeyId);
      } else {
        setIdentityId("");
        setAccessKeyId("");
      }
    }
    loadIds();
  }, [user])

  return (
    <Authenticator>
      <div className="App">
            <Text fontSize={'large'} fontWeight={'bold'}>Signed in as user {user?.getUsername()}</Text>
            <Card title="CognitoIdentity::GetId" variation="outlined">
              <Text>API - <b>CognitoIdentity::GetId</b></Text>
              <Text>IdentityId loaded: <b>{identityId}</b></Text>
            </Card>
            <Card title="CognitoIdentity::GetCredentialsFromIdentity" variation="outlined">
              <Text>API - <b>CognitoIdentity::GetCredentialsFromIdentity</b></Text>
              <Text>Credentials access key id loaded: <b>{accessKeyId}</b></Text>
            </Card>
            <Button onClick={signOut}>Sign out</Button>
          </div>
    </Authenticator>
  );
}

export default App;
